plugins {
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'java'
	id 'jacoco'
	id 'com.diffplug.spotless' version '6.25.0'
}

group = 'de.unimarburg.diz'
version = '0.0.2-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "2023.0.3")
	set("hapiFhirVersion", "7.2.1")
}

dependencies {
	// spring cloud stream kafka
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
	implementation ('org.springframework.cloud:spring-cloud-stream')

	// spring boot
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-actuator"

	// metrics
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.micrometer:micrometer-core'

	// mapper
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// hapi fhir
	implementation "ca.uhn.hapi.fhir:hapi-fhir-base:$hapiFhirVersion"
	implementation "ca.uhn.hapi.fhir:hapi-fhir-client:$hapiFhirVersion"
	implementation "ca.uhn.hapi.fhir:hapi-fhir-structures-r4:$hapiFhirVersion"
	implementation "ca.uhn.hapi.fhir:hapi-fhir-validation:$hapiFhirVersion"
	implementation "ca.uhn.hapi.fhir:hapi-fhir-validation-resources-r4:$hapiFhirVersion"
	implementation 'org.miracum:kafka-fhir-serializer:1.0.6'
	implementation "ca.uhn.hapi.fhir:hapi-fhir-caching-caffeine:$hapiFhirVersion"
	implementation 'org.projectlombok:lombok'

	// unit tests
	testImplementation 'org.springframework.cloud:spring-cloud-stream'
	testImplementation 'org.apache.kafka:kafka-streams-test-utils:3.7.1'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.assertj:assertj-core:3.26.3'
	runtimeOnly 'org.springframework.boot:spring-boot-docker-compose'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.12"
	reportsDirectory = layout.buildDirectory.dir('jacoco-reports')
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = true
		csv.outputLocation = layout.buildDirectory.file('jacoco/coverage.csv')
		html.outputLocation = layout.buildDirectory.dir('jacoco/html')
	}
}

jar {
	enabled = false
}

bootJar {
	mainClass.set('de.unimarburg.diz.kafkafhirvalidator.Application')
}


spotless {
	java {
		importOrder() // standard import order
		// You probably want an empty string at the end - all of the
		// imports you didn't specify explicitly will go there.

		removeUnusedImports()

		licenseHeader '/* GNU AFFERO GENERAL PUBLIC LICENSE Version 3 (C)$YEAR Datenintegrationszentrum Fachbereich Medizin Philipps Universit√§t Marburg */'
		formatAnnotations()
		cleanthat()
		googleJavaFormat() // has its own section below
	}
}
